{
	"info": {
		"_postman_id": "84468167-bca1-4205-a52a-5dc70b0d819f",
		"name": "WebService additional testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test JSON Response",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "943f275f-f956-4347-bdc5-ef5aed27acdb",
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Payload test\", function () {\r",
							"    pm.response.to.be.json;\r",
							"    let data = pm.response.json()\r",
							"    pm.expect(data.int).to.equal(1)\r",
							"    pm.expect(data.float).to.equal(1.1)\r",
							"    pm.expect(data.string).to.equal(\"Hi\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Basic test-token",
						"disabled": true
					}
				],
				"url": {
					"raw": "http://localhost:8080/json",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Unauthorized access",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf37bf39-2e3e-4e25-a994-7c9ae4fe5319",
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/secret",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"secret"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register without parameters",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a50d6e73-55be-41d3-b8c4-ff3feb95c3d4",
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register with false parameters",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "935ca509-249d-492d-89df-4d84266e6383",
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"usernam\": \"test\",\r\n    \"passord\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register with malformed json",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c66ce107-b39a-4b33-8492-74762cd45c19",
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"usernam\": test\",\r\n    \"passord\": \"test\"\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8918dab9-5b6e-40e1-81e6-753d67d27d95",
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Payload test\", function () {\r",
							"    const response = pm.response.text();\r",
							"    pm.expect(response).to.contain(\"test-token\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register with same username",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6d91b09b-fa22-4081-b1ee-6c43da465178",
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\": \"test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Access secured page",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cd5efa78-6370-4c5f-b2a6-41993d5921f5",
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Payload test\", function () {\r",
							"    pm.response.to.have.body(\"42\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic test-token",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/secret",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"secret"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}